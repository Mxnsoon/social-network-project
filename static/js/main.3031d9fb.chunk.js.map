{"version":3,"sources":["components/common/Preloader/Preloader.module.css","utils/validators/validators.js","redux/dialogs-reducer.js","components/Users/Users.module.css","components/Login/Login.module.css","components/hoc/withAuthRedirect.js","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","assets/images/user.jpg","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/hoc/withSuspense.js","App.js","index.js","api/api.js","components/common/Preloader/Preloader.jsx","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js","components/Header/Header.module.css"],"names":["module","exports","addPostValidator","Yup","post","max","required","sendMessageValidator","message","loginValidator","email","password","SEND_MESSAGE","initialState","messages","id","dialogs","name","sendMessageCreator","type","dialogsReducer","state","action","body","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","login","setAuthUserData","payload","getAuthUserData","authAPI","me","response","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","className","s","header","src","loginBlock","onClick","logout","HeaderContainer","Navbar","nav","item","activeClassName","activeLink","active","friends__container","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","selectedPage","notSelectedPage","e","User","user","unfollow","follow","avatar","photos","small","userPhoto","disabled","some","status","Users","getUsersSelector","getPageSizeSelector","getCurrentPageSelector","getTotalUsersCountSelector","getIsFetchingSelector","getFollowingInProgressSelector","UsersContainer","pageNumber","getUsers","Preloader","usersAPI","bind","page","totalCount","LoginForm","formik","useFormik","initialValues","rememberMe","validationSchema","onSubmit","values","actions","setSubmitting","handleSubmit","statusError","htmlFor","TextField","variant","placeholder","onChange","handleChange","value","onBlur","handleBlur","error","touched","Boolean","errors","helperText","Button","color","setStatus","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","promise","Promise","all","ReactDOM","document","getElementById","instance","axios","withCredentials","baseURL","headers","get","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","preloader","spinner","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","getUserProfile","postId"],"mappings":"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","file":"static/js/main.3031d9fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2DjR8\",\"spinner\":\"Preloader_spinner__2T5S9\",\"spin\":\"Preloader_spin__3co8f\"};","import * as Yup from \"yup\";\r\n\r\nexport const addPostValidator = Yup.object({\r\n    post: Yup.string()\r\n        .max(30, 'Вы превысили максимальное длинну символов(30)')\r\n        .required('Нельзя отправить пустое сообщение')\r\n})\r\n\r\nexport const sendMessageValidator = Yup.object({\r\n    message: Yup.string()\r\n        .max(30, 'Вы превысили максимальное длинну символов(30)')\r\n        .required('Нельзя отправить пустое сообщение')\r\n})\r\n\r\nexport const loginValidator = Yup.object({\r\n    email: Yup.string().email('Неправильный email').required('Заполните это поле'),\r\n    password: Yup.string()\r\n        .required('Введите пароль')\r\n})","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your site?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.message;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 10, message: body}],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (message) => ({type: SEND_MESSAGE, message})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__2d2JW\",\"selectedPage\":\"Users_selectedPage__16LnW\",\"pages\":\"Users_pages__3jaSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusError\":\"Login_statusError__2xY_5\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__yJ6zL\",\"item\":\"Navbar_item__351ZK\",\"activeLink\":\"Navbar_activeLink__1nv78\",\"friends__container\":\"Navbar_friends__container__3ugFy\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {}\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {setStatus} from \"./profile-reducer\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n            if (response.data.resultCode === 0) {\r\n                let{id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, actions) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                actions.setStatus(response.data.messages)\r\n            }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div> {props.login} - <button onClick={props.logout}>Logout</button> </div> :\r\n            <NavLink to={'/login'} >Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink} >Messages</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink} >Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Friends</a>\r\n            <div className={s.friends__container}>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            { portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }} >PREVIOUS</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={currentPage === p ? styles.selectedPage : styles.notSelectedPage}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={ () => { setPortionNumber(portionNumber + 1) } }>NEXT</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.36056b63.jpg\";","import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n            <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img className={styles.avatar} src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n\r\n            </div>\r\n            )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       pageSize={pageSize}\r\n                       totalItemsCount={totalUsersCount}\r\n            />\r\n            <div>\r\n                {users.map(u => <User key={u.id}\r\n                                      user={u}\r\n                                      followingInProgress={props.followingInProgress}\r\n                                      unfollow={props.unfollow}\r\n                                      follow={props.follow}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {follow, getUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector,\r\n    getPageSizeSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props\r\n\r\n        this.props.getUsers(currentPage, pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n\r\n        this.props.getUsers(pageNumber, pageSize);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {loginValidator} from \"../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from './Login.module.css'\r\n\r\nconst Login = (props) => {\r\n\r\n    if (props.isAuth)\r\n        return <Redirect to={\"/profile\"} />\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm login={props.login} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validationSchema: loginValidator,\r\n        onSubmit: (values, actions) => {\r\n            props.login(values.email, values.password, values.rememberMe, actions)\r\n            actions.setSubmitting(false)\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                {formik.status && <div className={styles.statusError}>{formik.status}</div> }\r\n            <label htmlFor=\"email\">\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder={\"email\"}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                    onBlur={formik.handleBlur}\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n            </label>\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"password\">\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder={\"password\"}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                    onBlur={formik.handleBlur}\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n            </label>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"rememberMe\">\r\n                <input type=\"checkbox\" name=\"rememberMe\" onChange={formik.handleChange} />RememberMe\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\" >Login</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./components/hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n\n                </div>\n            </div>\n        )\n            ;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as axios from \"axios\";\r\n\r\nconst baseUrl = 'https://social-network.samuraijs.com/api/1.0/';\r\n\r\nconst instance = axios.create({\r\n\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": '9a572f34-7d6c-4ec6-b467-a43bfe813cdf'\r\n    }\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styles from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.preloader}>\r\n            <div className={styles.spinner}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3fon8\",\"pageNumber\":\"Paginator_pageNumber__6XKDQ\",\"selectedPage\":\"Paginator_selectedPage__2qkFG\",\"notSelectedPage\":\"Paginator_notSelectedPage__1sVd2\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blablabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let body = action.post\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 10, message: body, likesCount: 50}],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (post) => ({type: ADD_POST, post})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n}\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1r2Hd\",\"loginBlock\":\"Header_loginBlock__2BlrW\"};"],"sourceRoot":""}